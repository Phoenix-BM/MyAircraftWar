@startuml
'https://plantuml.com/class-diagram


class EnemySubject {
    - enemies:List<AbstractEnemy>
    - enemyBullets:List<BaseBullet>
    + EnemySubject()
    + addEnemy(AbstractEnemy abstractEnemy):void
    + addBullet(BaseBullet baseBullet):void
    + removeEnemy(AbstractEnemy abstractEnemy):void
    + notifyAll(int score):int
}

EnemySubject o--> AbstractEnemy
EnemySubject o--> BaseBullet

abstract class AbstractEnemy
{
    # hp:int
    # score:int
    # power:int
    + AbstractEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getScore():int
    + increaseAttributes(int hpIncrease, double speedIncrease, int powerIncrease):void
    + {abstract} shoot():List<BaseBullet>
    + {abstract} propDrop(List<BaseProp> props, AbstractEnemy eliteEnemy):List<BaseProp>
    + {abstract} bombUpdate():int
}

AbstractEnemy <|-- MobEnemy
AbstractEnemy <|-- EliteEnemy
AbstractEnemy <|-- ElitePlusEnemy
AbstractEnemy <|-- BossEnemy

abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
	+ setPower():void
	+ {abstract} bombUpdate():int
}

BaseBullet <|-- EnemyBullet

class MobEnemy {
    - power:int
    - mobEnemyScore:int
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp, int score)
    + forward():void
    + shoot():List<BaseBullet>
    + propDrop(List<BaseProp> props, AbstractEnemy eliteEnemy):List<BaseProp>
    + executeStrategy(AbstractAircraft abstractAircraft):List<BaseBullet>
    + bombUpdate():int
}

class EliteEnemy {
    - shootnum:int
    - power:int
    - eliteEnemyScore:int
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp, int score)
    + forward():void
    + shoot():List<BaseBullet>
    + propDrop(List<BaseProp> props, AbstractEnemy eliteEnemy):List<BaseProp>
    + executeStrategy(AbstractAircraft abstractAircraft):List<BaseBullet>
    + bombUpdate():int
}

class ElitePlusEnemy {
    - shootnum:int
    - power:int
    - elitePlusEnemyScore:int
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int speedY, int hp, int score)
    + forward():void
    + shoot():List<BaseBullet>
    + propDrop(List<BaseProp> props, AbstractEnemy eliteEnemy):List<BaseProp>
    + executeStrategy(AbstractAircraft abstractAircraft):List<BaseBullet>
    + bombUpdate():int
}

class BossEnemy {
    - shootnum:int
    - power:int
    - bossScore:int
    - hp:int
    - bossMusicThread:MusicThread
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp, int score)
    + forward():void
    + shoot():List<BaseBullet>
    + propDrop(List<BaseProp> props, AbstractEnemy eliteEnemy):List<BaseProp>
    + startBossMusic():void
    + endBossMusic():void
    + executeStrategy(AbstractAircraft abstractAircraft):List<BaseBullet>
    + bombUpdate():void
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
    + bombUpdate():int
}

class PropBomb {
    + PropBomb(int locationX, int locationY,
      int speedX, int speedY)
    + effect(List<AbstractEnemy> enemyAircrafts, List<BaseBullet> enemyBullets):int
}

PropBomb --> EnemySubject

PropBomb ..> MobEnemy
PropBomb ..> EliteEnemy
PropBomb ..> ElitePlusEnemy
PropBomb ..> BossEnemy
PropBomb ..> EnemyBullet

@enduml